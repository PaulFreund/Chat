<!-- ################################################################################################

    Copyright (c) since 2012 - Paul Freund 
    
    Permission is hereby granted, free of charge, to any person
    obtaining a copy of this software and associated documentation
    files (the "Software"), to deal in the Software without
    restriction, including without limitation the rights to use,
    copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the
    Software is furnished to do so, subject to the following
    conditions:
    
    The above copyright notice and this permission notice shall be
    included in all copies or substantial portions of the Software.
    
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
    OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
    HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
    FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
    OTHER DEALINGS IN THE SOFTWARE.

#################################################################################################### -->
    
<Application
    x:Class="Chat.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Chat"
    xmlns:localData="using:Backend.Data" 
    xmlns:converter="using:Chat.UI.Converter"
    RequestedTheme="Light"
>

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Common/StandardStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- ==================================         General         ================================== -->

            <x:String x:Key="AppName">Chat</x:String>

            <local:AppColors x:Key="AppColors" />  <!-- This instance serves all colors-->
            
            <!-- ==================================         Converter         ================================== -->

            <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converter:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            <converter:ContactVisibilityConverter x:Key="ContactVisibilityConverter"/>
            <converter:AccountToColorConverter x:Key="AccountToColorConverter"/>
            <converter:StatusMessageAdapter x:Key="StatusMessageAdapter"/>
            <converter:ContactStatusToColor x:Key="ContactStatusToColor"/>
            <converter:SubscribeFromVisibilityConverter x:Key="SubscribeFromVisibilityConverter" />
            <converter:ContactSubscriptionVisibilityConverter x:Key="ContactSubscriptionVisibilityConverter" />
            <converter:MessageFlowDirectionChooser x:Key="MessageFlowDirectionChooser"/>
            <converter:MessageTextAlignChooser x:Key="MessageTextAlignChooser"/>
            <converter:DateTimeToTextConverter x:Key="DateTimeToTextConverter" />
            <converter:JIDToImageConverter x:Key="JIDToImageConverter" />
            <converter:ImportanceToHeaderColorConverter x:Key="ImportanceToHeaderColorConverter" />
            <converter:OverlayColorPointerOver x:Key="OverlayColorPointerOver" />
            <converter:OverlayColorPressed x:Key="OverlayColorPressed" />
            <converter:OverlayColorDisabled x:Key="OverlayColorDisabled" />
            <converter:RichMessageParser x:Key="RichMessageParser" />
            
            <!-- ==================================         Colors         ================================== -->

            <!-- Status -->

            <LinearGradientBrush x:Key="StatusBrushAvailable" StartPoint="0,-5" EndPoint="0,6">
                <GradientStop Color="White"/>
                <GradientStop Color="{Binding StatusAvailable, Source={StaticResource AppColors}}" Offset="0.5"/>
                <GradientStop Color="Black" Offset="1"/>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="StatusBrushAway" StartPoint="0,-5" EndPoint="0,6">
                <GradientStop Color="White"/>
                <GradientStop Color="{Binding StatusAway, Source={StaticResource AppColors}}" Offset="0.5"/>
                <GradientStop Color="Black" Offset="1"/>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="StatusBrushBusy" StartPoint="0,-5" EndPoint="0,6">
                <GradientStop Color="White"/>
                <GradientStop Color="{Binding StatusDnd, Source={StaticResource AppColors}}" Offset="0.5"/>
                <GradientStop Color="Black" Offset="1"/>
            </LinearGradientBrush>

            <LinearGradientBrush x:Key="StatusBrushOffline" StartPoint="0,-5" EndPoint="0,6">
                <GradientStop Color="White"/>
                <GradientStop Color="{Binding StatusOffline, Source={StaticResource AppColors}}" Offset="0.5"/>
                <GradientStop Color="Black" Offset="1"/>
            </LinearGradientBrush>

            <!-- ProgressBar -->
            
            <SolidColorBrush x:Key="ProgressBarForegroundThemeBrush"                        Color="{Binding FrameForeground         , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ProgressBarIndeterminateForegroundThemeBrush"           Color="{Binding FrameForeground         , Source={StaticResource AppColors}}"/>

            <!-- App Bar -->
            
            <SolidColorBrush x:Key="AppBarItemForegroundThemeBrush"                         Color="{Binding FrameForeground         , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="AppBarItemBackgroundThemeBrush"                         Color="{Binding FrameBackground         , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="AppBarItemPointerOverForegroundThemeBrush"              Color="{Binding FrameForeground         , Source={StaticResource AppColors}}" Opacity="0.5"/>
            <SolidColorBrush x:Key="AppBarItemPointerOverBackgroundThemeBrush"              Color="{Binding FrameBackground         , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="AppBarItemPressedForegroundThemeBrush"                  Color="{Binding FrameBackground         , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="AppBarItemPressedBackgroundThemeBrush"                  Color="{Binding FrameForeground         , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="AppBarItemDisabledForegroundThemeBrush"                 Color="{Binding FrameForeground         , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            
            <!-- Button -->

            <SolidColorBrush x:Key="ButtonForegroundThemeBrush"                             Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ButtonBackgroundThemeBrush"                             Color="{Binding ContentPopout           , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ButtonBorderThemeBrush"                                 Color="{Binding ContentPopout           , Source={StaticResource AppColors}}"/>

            <SolidColorBrush x:Key="ButtonDisabledBackgroundThemeBrush"                     Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="ButtonDisabledForegroundThemeBrush"                     Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="ButtonDisabledBorderThemeBrush"                         Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>

            <SolidColorBrush x:Key="ButtonPointerOverForegroundThemeBrush"                  Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}" />
            <SolidColorBrush x:Key="ButtonPointerOverBackgroundThemeBrush"                  Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}" />
            
            <SolidColorBrush x:Key="ButtonPressedForegroundThemeBrush"                      Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPressed}}" />
            <SolidColorBrush x:Key="ButtonPressedBackgroundThemeBrush"                      Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPressed}}" />


            <!-- TextBox -->

            <SolidColorBrush x:Key="TextBoxForegroundThemeBrush"                            Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="TextBoxBackgroundThemeBrush"                            Color="{Binding ContentBackground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="TextBoxBorderThemeBrush"                                Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPressed}}"/>

            <SolidColorBrush x:Key="TextBoxDisabledForegroundThemeBrush"                    Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="TextBoxDisabledBackgroundThemeBrush"                    Color="{Binding ContentBackground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="TextBoxDisabledBorderThemeBrush"                        Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>

            <!-- ToggleSwitch -->
            
            <SolidColorBrush x:Key="ToggleSwitchCurtainBackgroundThemeBrush"                Color="{Binding ContentEnabled          , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ToggleSwitchCurtainDisabledBackgroundThemeBrush"        Color="{Binding ContentEnabled          , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="ToggleSwitchCurtainPointerOverBackgroundThemeBrush"     Color="{Binding ContentEnabled          , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}" />
            <SolidColorBrush x:Key="ToggleSwitchCurtainPressedBackgroundThemeBrush"         Color="{Binding ContentEnabled          , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPressed}}" />

            <SolidColorBrush x:Key="ToggleSwitchForegroundThemeBrush"                       Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ToggleSwitchDisabledForegroundThemeBrush"               Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>

            <SolidColorBrush x:Key="ToggleSwitchHeaderForegroundThemeBrush"                 Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ToggleSwitchHeaderDisabledForegroundThemeBrush"         Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>

            <SolidColorBrush x:Key="ToggleSwitchOuterBorderBorderThemeBrush"                Color="{Binding ContentPopout           , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ToggleSwitchOuterBorderDisabledBorderThemeBrush"        Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>

            <SolidColorBrush x:Key="ToggleSwitchThumbBackgroundThemeBrush" 				    Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ToggleSwitchThumbBorderThemeBrush" 					    Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ToggleSwitchThumbDisabledBackgroundThemeBrush" 		    Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="ToggleSwitchThumbDisabledBorderThemeBrush" 			    Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="ToggleSwitchThumbPointerOverBackgroundThemeBrush" 	    Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ToggleSwitchThumbPointerOverBorderThemeBrush" 		    Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ToggleSwitchThumbPressedBackgroundThemeBrush" 		    Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ToggleSwitchThumbPressedForegroundThemeBrush" 		    Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>

            <SolidColorBrush x:Key="ToggleSwitchTrackBackgroundThemeBrush"                  Color="{Binding ContentPopout           , Source={StaticResource AppColors}}" />
            <SolidColorBrush x:Key="ToggleSwitchTrackBorderThemeBrush"                      Color="Transparent" />
            <SolidColorBrush x:Key="ToggleSwitchTrackDisabledBackgroundThemeBrush"          Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="ToggleSwitchTrackPointerOverBackgroundThemeBrush"       Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}"/>
            <SolidColorBrush x:Key="ToggleSwitchTrackPressedBackgroundThemeBrush"           Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPressed}}"/>

            <!-- ComboBox -->

            <SolidColorBrush x:Key="ComboBoxForegroundThemeBrush"                           Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ComboBoxBackgroundThemeBrush"                           Color="{Binding ContentBackground       , Source={StaticResource AppColors}}" />
            <SolidColorBrush x:Key="ComboBoxBorderThemeBrush"                               Color="{Binding ContentPopout           , Source={StaticResource AppColors}}"/>

            <SolidColorBrush x:Key="ComboBoxDisabledForegroundThemeBrush"                   Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="ComboBoxDisabledBackgroundThemeBrush"                   Color="{Binding ContentBackground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}" />
            <SolidColorBrush x:Key="ComboBoxDisabledBorderThemeBrush"                       Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>

            <SolidColorBrush x:Key="ComboBoxArrowForegroundThemeBrush"                      Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ComboBoxArrowDisabledForegroundThemeBrush"              Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="ComboBoxArrowPressedForegroundThemeBrush"               Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPressed}}"/>


            <SolidColorBrush x:Key="ComboBoxFocusedBackgroundThemeBrush"                    Color="{Binding ContentBackground       , Source={StaticResource AppColors}}" />
            <SolidColorBrush x:Key="ComboBoxFocusedBorderThemeBrush"                        Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}" />
            <SolidColorBrush x:Key="ComboBoxFocusedForegroundThemeBrush"                    Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}" />

            <SolidColorBrush x:Key="ComboBoxPointerOverBackgroundThemeBrush"                Color="{Binding ContentBackground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}" />
            <SolidColorBrush x:Key="ComboBoxPointerOverBorderThemeBrush"                    Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}" />

            <SolidColorBrush x:Key="ComboBoxPopupBackgroundThemeBrush"                      Color="{Binding ContentBackground       , Source={StaticResource AppColors}}" />
            <SolidColorBrush x:Key="ComboBoxPopupBorderThemeBrush"                          Color="{Binding ContentPopout           , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ComboBoxPopupForegroundThemeBrush"                      Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>

            <SolidColorBrush x:Key="ComboBoxPressedBackgroundThemeBrush"                    Color="{Binding ContentBackground       , Source={StaticResource AppColors}}" />
            <SolidColorBrush x:Key="ComboBoxPressedBorderThemeBrush"                        Color="{Binding ContentPopout           , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPressed}}"/>
            <SolidColorBrush x:Key="ComboBoxPressedHighlightThemeBrush"                     Color="{Binding ContentEnabled          , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ComboBoxPressedForegroundThemeBrush"                    Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPressed}}"/>

            <SolidColorBrush x:Key="ComboBoxSelectedBackgroundThemeBrush"                   Color="{Binding ContentBackground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ComboBoxSelectedPointerOverBackgroundThemeBrush"        Color="{Binding ContentEnabled          , Source={StaticResource AppColors}}"/>

            <!-- ComboBoxItem -->
            
            <SolidColorBrush x:Key="ComboBoxItemDisabledForegroundThemeBrush"               Color="{Binding ContentForeground       , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ComboBoxItemPointerOverBackgroundThemeBrush"            Color="{Binding ContentBackground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}"/>
            <SolidColorBrush x:Key="ComboBoxItemPointerOverForegroundThemeBrush"            Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}"/>
            <SolidColorBrush x:Key="ComboBoxItemPressedBackgroundThemeBrush"                Color="{Binding ContentBackground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPressed}}"/>
            <SolidColorBrush x:Key="ComboBoxItemPressedForegroundThemeBrush"                Color="{Binding ContentForeground       , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPressed}}"/>
            <SolidColorBrush x:Key="ComboBoxItemSelectedBackgroundThemeBrush"               Color="{Binding ContentEnabled          , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ComboBoxItemSelectedForegroundThemeBrush"               Color="{Binding HighlightForeground     , Source={StaticResource AppColors}}"/>
            <SolidColorBrush x:Key="ComboBoxItemSelectedDisabledBackgroundThemeBrush"       Color="{Binding ContentEnabled          , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="ComboBoxItemSelectedDisabledForegroundThemeBrush"       Color="{Binding HighlightForeground     , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorDisabled}}"/>
            <SolidColorBrush x:Key="ComboBoxItemSelectedPointerOverBackgroundThemeBrush"    Color="{Binding ContentEnabled          , Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}"/>

            <!-- ==================================         Flyout Styles        ================================== -->

            <x:String x:Key="ToggleSwitchOnText">On</x:String>
            <x:String x:Key="ToggleSwitchOffText">Off</x:String>

            <Style x:Key="FlyoutComboBox" TargetType="ComboBox">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Margin" Value="6,0,6,25" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="FontWeight" Value="Semilight" />  
            </Style>
            
            <Style x:Key="FlyoutButton" TargetType="Button">
                <Setter Property="HorizontalAlignment" Value="Right" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="FlyoutToggleSwitch" TargetType="ToggleSwitch">
                <Setter Property="Margin" Value="0,0,0,15" />
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock IsHitTestVisible="False" FontSize="16" TextWrapping="Wrap" Text="{Binding}" />
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="FlyoutLabel" TargetType="TextBlock">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Margin" Value="6,0,6,0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontWeight" Value="Semilight" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <Style x:Key="FlyoutInput" TargetType="TextBox">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Margin" Value="6,0,6,25" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="FontWeight" Value="Semilight" />
            </Style>

            <Style x:Key="FlyoutPassword" TargetType="PasswordBox">
                <Setter Property="FontSize" Value="16" />
                <Setter Property="Margin" Value="6,0,6,25" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="FontWeight" Value="Semilight" />
            </Style>

            <Style x:Key="FlyoutRun" TargetType="TextBlock">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="Semilight" />
                <Setter Property="Margin" Value="6,0,6,25" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="FlyoutLink" TargetType="HyperlinkButton">
                <Setter Property="Foreground" Value="Blue" />
                <Setter Property="FontSize" Value="15" />
                <Setter Property="FontWeight" Value="Semilight" />
                <Setter Property="Margin" Value="0,0,0,0" />
                <Setter Property="Padding" Value="0,0,0,-7" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="VerticalContentAlignment" Value="Bottom" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
            </Style>

            <Style x:Key="FlyoutRunRich" TargetType="RichTextBlock">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="Semilight" />
                <Setter Property="Margin" Value="6,0,6,25" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="FlyoutImportant" TargetType="TextBlock">
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="FontSize" Value="16" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="Margin" Value="6,10,6,0" />
                <Setter Property="Padding" Value="0" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="FlyoutHeader" TargetType="TextBlock">
                <Setter Property="FontSize" Value="20" />
            </Style>

            <Style x:Key="FlyoutWarning" TargetType="TextBlock">
                <Setter Property="Margin" Value="0,20,0,20" />
                <Setter Property="FontWeight" Value="Bold" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="TextWrapping" Value="Wrap" />
            </Style>

            <!-- ==================================         Simple ListViewItem        ================================== -->

            <Style x:Key="SimpleListViewItemStyle" TargetType="ListViewItem">
                <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="TabNavigation" Value="Local"/>
                <Setter Property="IsHoldingEnabled" Value="True"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="ContentContainer" >
                                <ContentPresenter 
                                    x:Name="contentPresenter" 
                                    ContentTemplate="{TemplateBinding ContentTemplate}" 
                                    ContentTransitions="{TemplateBinding ContentTransitions}" 
                                    Content="{TemplateBinding Content}" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="{TemplateBinding Padding}" 
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ==================================         Roster ListViewItem        ================================== -->

            <Style x:Key="RosterListViewItemStyle" TargetType="ListViewItem">
                <Setter Property="FontFamily" Value="{StaticResource ContentControlThemeFontFamily}"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="TabNavigation" Value="Local"/>
                <Setter Property="IsHoldingEnabled" Value="True"/>
                <Setter Property="Margin" Value="0,0,0,0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Top"/>
                <Setter Property="Transitions" Value="{x:Null}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <Border x:Name="OuterContainer" >
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <PointerDownThemeAnimation TargetName="ContentContainer"/>
                                            </Storyboard>
                                        </VisualState>
                                        
                                        <VisualState x:Name="PointerOverPressed">
                                            <Storyboard>
                                                <PointerDownThemeAnimation TargetName="ContentContainer"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PointerOverBorder"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused" />
                                        <VisualState x:Name="Unfocused"/>
                                        <VisualState x:Name="PointerFocused"/>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="SelectionHintStates">
                                        <VisualState x:Name="VerticalSelectionHint" />
                                        <VisualState x:Name="HorizontalSelectionHint" />
                                        <VisualState x:Name="NoSelectionHint"/>
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState x:Name="Unselecting" />
                                        <VisualState x:Name="Unselected" />
                                        <VisualState x:Name="UnselectedPointerOver" />
                                        <VisualState x:Name="UnselectedSwiping" />
                                        
                                        <VisualState x:Name="Selecting">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectionBorderTop"><DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/></ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectionBorderBottom"><DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/></ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>

                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectionBorderTop"><DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/></ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectionBorderBottom"><DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/></ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        
                                        <VisualState x:Name="SelectedSwiping">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectionBorderTop"><DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/></ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectionBorderBottom"><DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/></ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        
                                        <VisualState x:Name="SelectedUnfocused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectionBackground"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectionBorderTop"><DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/></ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="SelectionBorderBottom"><DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/></ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        
                                    </VisualStateGroup>

                                    <VisualStateGroup x:Name="DragStates">
                                        <VisualState x:Name="NotDragging"/>
                                        <VisualState x:Name="Dragging" />
                                        <VisualState x:Name="DraggingTarget" />
                                        <VisualState x:Name="MultipleDraggingPrimary" />
                                        <VisualState x:Name="MultipleDraggingSecondary" />
                                    </VisualStateGroup>
                                    
                                    <VisualStateGroup x:Name="ReorderHintStates">
                                        <VisualState x:Name="NoReorderHint"/>
                                        <VisualState x:Name="BottomReorderHint"/>
                                        <VisualState x:Name="TopReorderHint"/>
                                        <VisualState x:Name="RightReorderHint"/>
                                        <VisualState x:Name="LeftReorderHint"/>
                                    </VisualStateGroup>
                                    
                                    <VisualStateGroup x:Name="DataVirtualizationStates">
                                        <VisualState x:Name="DataAvailable"/>
                                        <VisualState x:Name="DataPlaceholder" />
                                    </VisualStateGroup>

                                </VisualStateManager.VisualStateGroups>
                                
                                <Border x:Name="ContentContainer" >
                                    <StackPanel Orientation="Vertical">

                                        <StackPanel x:Name="SelectionBorderTop" Visibility="Collapsed">
                                            <Rectangle Height="10" Fill="{Binding ContactListBackground, Source={StaticResource AppColors}}" />
                                            <Rectangle Height="10" Fill="{Binding ContactListSelected, Source={StaticResource AppColors}}"  />
                                        </StackPanel>

                                        <Grid>
                                            <Rectangle x:Name="PointerOverBorder" Fill="{Binding ContactListBackground, Source={StaticResource AppColors}, Converter={StaticResource OverlayColorPointerOver}}" IsHitTestVisible="False" Margin="0,0,0,0" Opacity="0"/>
                                            <Rectangle x:Name="SelectionBackground" Fill="{Binding ContactListSelected, Source={StaticResource AppColors}}" Margin="0,0,0,0" Opacity="0"/>
                                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Grid>
                                        
                                        <StackPanel x:Name="SelectionBorderBottom" Visibility="Collapsed">
                                            <Rectangle Height="10" Fill="{Binding ContactListSelected, Source={StaticResource AppColors}}"  />
                                            <Rectangle Height="10" Fill="{Binding ContactListBackground, Source={StaticResource AppColors}}" />
                                        </StackPanel>

                                    </StackPanel>
                                </Border>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ==================================         SmallToggleSwitch     ================================== -->

            <ControlTemplate x:Key="SmallToggleSwitchControlTemplate" TargetType="ToggleSwitch">
                <Border Background="{TemplateBinding Background}"
            		BorderBrush="{TemplateBinding BorderBrush}"
            		BorderThickness="{TemplateBinding BorderThickness}">
                    <VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal" />
                            <VisualState x:Name="PointerOver">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchCurtain"
            							Storyboard.TargetProperty="Fill">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchCurtainPointerOverBackgroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder"
            							Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchTrackPointerOverBackgroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnob"
            							Storyboard.TargetProperty="Fill">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchThumbPointerOverBackgroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnob"
            							Storyboard.TargetProperty="Stroke">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchThumbPointerOverBorderThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Pressed">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchCurtain"
            							Storyboard.TargetProperty="Fill">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchCurtainPressedBackgroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder"
            							Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchTrackPressedBackgroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnob"
            							Storyboard.TargetProperty="Fill">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchThumbPressedBackgroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnob"
            							Storyboard.TargetProperty="Stroke">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchThumbPressedForegroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Disabled">
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="HeaderContentPresenter"
            							Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchHeaderDisabledForegroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OffContentPresenter"
            							Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchDisabledForegroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OnContentPresenter"
            							Storyboard.TargetProperty="Foreground">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchDisabledForegroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="OuterBorder"
            							Storyboard.TargetProperty="BorderBrush">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchOuterBorderDisabledBorderThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder"
            							Storyboard.TargetProperty="Background">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchTrackDisabledBackgroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnob"
            							Storyboard.TargetProperty="Fill">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchThumbDisabledBackgroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchKnob"
            							Storyboard.TargetProperty="Stroke">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchThumbDisabledBorderThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SwitchCurtain"
            							Storyboard.TargetProperty="Fill">
                                        <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource ToggleSwitchCurtainDisabledBackgroundThemeBrush}" />
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="ToggleStates">
                            <VisualStateGroup.Transitions>
                                <VisualTransition x:Name="DraggingToOnTransition"
            						From="Dragging"
            						To="On"
            						GeneratedDuration="0">
                                    <Storyboard>
                                        <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        <RepositionThemeAnimation TargetName="SwitchCurtain" FromHorizontalOffset="{Binding TemplateSettings.CurtainCurrentToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </Storyboard>
                                </VisualTransition>
                                <VisualTransition x:Name="DraggingToOffTransition"
            						From="Dragging"
            						To="Off"
            						GeneratedDuration="0">
                                    <Storyboard>
                                        <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding TemplateSettings.KnobCurrentToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        <RepositionThemeAnimation TargetName="SwitchCurtain" FromHorizontalOffset="{Binding TemplateSettings.CurtainCurrentToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </Storyboard>
                                </VisualTransition>
                                <VisualTransition x:Name="OnToOffTransition"
            						From="On"
            						To="Off"
            						GeneratedDuration="0">
                                    <Storyboard>
                                        <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding TemplateSettings.KnobOnToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        <RepositionThemeAnimation TargetName="SwitchCurtain" FromHorizontalOffset="{Binding TemplateSettings.CurtainOnToOffOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </Storyboard>
                                </VisualTransition>
                                <VisualTransition x:Name="OffToOnTransition"
            						From="Off"
            						To="On"
            						GeneratedDuration="0">
                                    <Storyboard>
                                        <RepositionThemeAnimation TargetName="SwitchKnob" FromHorizontalOffset="{Binding TemplateSettings.KnobOffToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                        <RepositionThemeAnimation TargetName="SwitchCurtain" FromHorizontalOffset="{Binding TemplateSettings.CurtainOffToOnOffset, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                    </Storyboard>
                                </VisualTransition>
                            </VisualStateGroup.Transitions>
                            <VisualState x:Name="Dragging" />
                            <VisualState x:Name="Off">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="CurtainTranslateTransform"
            							Storyboard.TargetProperty="X"
            							To="-44"
            							Duration="0" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="On">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="CurtainTranslateTransform"
            							Storyboard.TargetProperty="X"
            							To="0"
            							Duration="0" />
                                    <DoubleAnimation Storyboard.TargetName="KnobTranslateTransform"
            							Storyboard.TargetProperty="X"
            							To="38"
            							Duration="0" />
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="ContentStates">
                            <VisualState x:Name="OffContent">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="OffContentPresenter"
            							Storyboard.TargetProperty="Opacity"
            							To="1"
            							Duration="0" />
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OffContentPresenter">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <x:Boolean>True</x:Boolean>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="OnContent">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="OnContentPresenter"
            							Storyboard.TargetProperty="Opacity"
            							To="1"
            							Duration="0" />
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="OnContentPresenter">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <x:Boolean>True</x:Boolean>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </VisualState>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="FocusVisualWhite"
            							Storyboard.TargetProperty="Opacity"
            							To="1"
            							Duration="0" />
                                    <DoubleAnimation Storyboard.TargetName="FocusVisualBlack"
            							Storyboard.TargetProperty="Opacity"
            							To="1"
            							Duration="0" />
                                </Storyboard>
                            </VisualState>
                            <VisualState x:Name="Unfocused" />
                            <VisualState x:Name="PointerFocused" />
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="1" Margin="{TemplateBinding Padding}">

                            <ContentPresenter x:Name="OffContentPresenter" Margin="0" Opacity="0" IsHitTestVisible="False" Height="0" Width="0" Visibility="Collapsed"/>
                            <ContentPresenter x:Name="OnContentPresenter" Margin="0" Opacity="0" IsHitTestVisible="False" Height="0" Width="0" Visibility="Collapsed"/>

                            <Grid Background="Transparent">
                                <Grid x:Name="SwitchKnobBounds" Height="19" Margin="0,0,0,0">
                                    <Border x:Name="OuterBorder"
            							BorderBrush="{StaticResource ToggleSwitchOuterBorderBorderThemeBrush}"
            							BorderThickness="2">
                                        <Border x:Name="InnerBorder"
            								Background="{StaticResource ToggleSwitchTrackBackgroundThemeBrush}"
            								BorderBrush="{StaticResource ToggleSwitchTrackBorderThemeBrush}"
            								BorderThickness="1">
                                            <ContentPresenter x:Name="SwitchCurtainBounds">
                                                <ContentPresenter x:Name="SwitchCurtainClip">
                                                    <Rectangle x:Name="SwitchCurtain"
            											Fill="{StaticResource ToggleSwitchCurtainBackgroundThemeBrush}"
            											Width="44">
                                                        <Rectangle.RenderTransform>
                                                            <TranslateTransform x:Name="CurtainTranslateTransform" X="-44" />
                                                        </Rectangle.RenderTransform>
                                                    </Rectangle>
                                                </ContentPresenter>
                                            </ContentPresenter>
                                        </Border>
                                    </Border>
                                    <Rectangle x:Name="SwitchKnob"
            							Fill="{StaticResource ToggleSwitchThumbBackgroundThemeBrush}"
            							Stroke="{StaticResource ToggleSwitchThumbBorderThemeBrush}"
            							StrokeThickness="1"
            							HorizontalAlignment="Left"
            							Width="12">
                                        <Rectangle.RenderTransform>
                                            <TranslateTransform x:Name="KnobTranslateTransform" />
                                        </Rectangle.RenderTransform>
                                    </Rectangle>
                                    <Rectangle x:Name="FocusVisualWhite"
            							Stroke="{StaticResource FocusVisualWhiteStrokeThemeBrush}"
            							StrokeEndLineCap="Square"
            							StrokeDashArray="1,1"
            							Opacity="0"
            							Margin="-3"
            							StrokeDashOffset="1.5" />
                                    <Rectangle x:Name="FocusVisualBlack"
            							Stroke="{StaticResource FocusVisualBlackStrokeThemeBrush}"
            							StrokeEndLineCap="Square"
            							StrokeDashArray="1,1"
            							Opacity="0"
            							Margin="-3"
            							StrokeDashOffset="0.5" />
                                </Grid>
                                <Thumb x:Name="SwitchThumb">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle Fill="Transparent" />
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>
            </ControlTemplate>

            <!-- ==================================         SimpleButton     ================================== -->

            <Style x:Key="SimpleButton" TargetType="Button">
                <Setter Property="Background" Value="{x:Null}"/>
                <Setter Property="Foreground" Value="{x:Null}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="0,0,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="PointerOver">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource OverlayColorPointerOver}}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource OverlayColorPressed}}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Background, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource OverlayColorDisabled}}"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Unfocused"/>
                                        <VisualState x:Name="PointerFocused"/>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Border" Background="{TemplateBinding Background}">
                                    <ContentPresenter x:Name="ContentPresenter" Margin="{TemplateBinding Padding}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ==================================         ConversationHyperlink     ================================== -->
            <Style x:Key="ConversationHyperlink" TargetType="HyperlinkButton">
                <!-- hack to force the buttons to display like inline text, 
                needs adjustment for different font sizes... -->
                <Setter Property="Margin" Value="-3,0,0,-7"/>
                <Setter Property="Padding" Value="0,0,0,0"/>
                <Setter Property="FontSize" Value="16" />
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>
